<%- include('_header') %>

<h1>Welcome!</h1>

<form action="/upload" method="POST" enctype="multipart/form-data">
  <input type="file" name="image" accept="image/*">
  <button type="submit">Upload Image</button>
</form>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Take Photo and Upload</title>
</head>
<body>
  <h1>Take a Photo and Upload</h1>
  
  <form id="uploadForm" action="/upload-photo" method="post">
      <input type="hidden" name="photo" id="photoData">
      <button type="submit" id="submitPhoto" style="display:none;">Submit Photo</button>
  </form>

  <input type="file" id="fileInput" accept="image/*" capture="camera" style="display:none;">
  <button id="takePhoto">Take Photo</button>
  <canvas id="canvas" style="display:none;"></canvas>

  <script>
      const takePhotoButton = document.getElementById('takePhoto');
      const canvas = document.getElementById('canvas');
      const photoData = document.getElementById('photoData');
      const submitPhotoButton = document.getElementById('submitPhoto');
      const fileInput = document.getElementById('fileInput');

      takePhotoButton.addEventListener('click', () => {
          fileInput.click();
      });

      fileInput.addEventListener('change', async (event) => {
          const file = event.target.files[0];
          if (!file) return;

          const reader = new FileReader();
          reader.onload = function(e) {
              const img = new Image();
              img.onload = function() {
                  const resizedCanvas = document.createElement('canvas');
                  const MAX_WIDTH = 1920; // Adjust maximum width as needed
                  const MAX_HEIGHT = 1080; // Adjust maximum height as needed
                  let width = img.width;
                  let height = img.height;

                  if (width > height) {
                      if (width > MAX_WIDTH) {
                          height *= MAX_WIDTH / width;
                          width = MAX_WIDTH;
                      }
                  } else {
                      if (height > MAX_HEIGHT) {
                          width *= MAX_HEIGHT / height;
                          height = MAX_HEIGHT;
                      }
                  }
                  let sizing = 1920 / img.width;
                  resizedCanvas.width = width;
                  resizedCanvas.height = height;
                  const ctx = resizedCanvas.getContext('2d');
                  ctx.drawImage(img, 0, 0, width, height);
                  const dataUrl = resizedCanvas.toDataURL('image/jpeg', sizing); // Adjust JPEG quality (0.0 - 1.0) as needed
                  photoData.value = dataUrl;
                  submitPhotoButton.style.display = 'block';
              }
              img.src = e.target.result;
          };
          reader.readAsDataURL(file);
      });

      uploadForm.addEventListener('submit', (e) => {
          if (!photoData.value) {
              e.preventDefault();
              alert('Please take a photo first.');
          }
      });
  </script>
</body>

<%- include('_footer') %>
